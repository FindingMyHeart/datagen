// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: static_data_proto.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace com.bsl.data {

  /// <summary>Holder for reflection information generated from static_data_proto.proto</summary>
  public static partial class StaticDataProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for static_data_proto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StaticDataProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdzdGF0aWNfZGF0YV9wcm90by5wcm90byKjBQoLRGF0YU1hbmFnZXISOAoO",
            "cGFpaml1Q2FyZERhdGEYASADKAsyIC5EYXRhTWFuYWdlci5QYWlqaXVDYXJk",
            "RGF0YUVudHJ5EkIKE3BhaWppdUNhcmRHcm91cERhdGEYAiADKAsyJS5EYXRh",
            "TWFuYWdlci5QYWlqaXVDYXJkR3JvdXBEYXRhRW50cnkSTAoYcGFpaml1Q2Fy",
            "ZEdyb3VwU2NvcmVEYXRhGAMgAygLMiouRGF0YU1hbmFnZXIuUGFpaml1Q2Fy",
            "ZEdyb3VwU2NvcmVEYXRhRW50cnkSLAoIcm9vbURhdGEYBCADKAsyGi5EYXRh",
            "TWFuYWdlci5Sb29tRGF0YUVudHJ5EiwKCHRlc3REYXRhGAUgAygLMhouRGF0",
            "YU1hbmFnZXIuVGVzdERhdGFFbnRyeRpGChNQYWlqaXVDYXJkRGF0YUVudHJ5",
            "EgsKA2tleRgBIAEoBRIeCgV2YWx1ZRgCIAEoCzIPLlBhaWppdUNhcmREYXRh",
            "OgI4ARpQChhQYWlqaXVDYXJkR3JvdXBEYXRhRW50cnkSCwoDa2V5GAEgASgJ",
            "EiMKBXZhbHVlGAIgASgLMhQuUGFpaml1Q2FyZEdyb3VwRGF0YToCOAEaWgod",
            "UGFpaml1Q2FyZEdyb3VwU2NvcmVEYXRhRW50cnkSCwoDa2V5GAEgASgJEigK",
            "BXZhbHVlGAIgASgLMhkuUGFpaml1Q2FyZEdyb3VwU2NvcmVEYXRhOgI4ARo6",
            "Cg1Sb29tRGF0YUVudHJ5EgsKA2tleRgBIAEoCRIYCgV2YWx1ZRgCIAEoCzIJ",
            "LlJvb21EYXRhOgI4ARo6Cg1UZXN0RGF0YUVudHJ5EgsKA2tleRgBIAEoBRIY",
            "CgV2YWx1ZRgCIAEoCzIJLlRlc3REYXRhOgI4ASIqCg5QYWlqaXVDYXJkRGF0",
            "YRIKCgJpZBgBIAEoBRIMCgRjYXJkGAIgASgFIi8KE1BhaWppdUNhcmRHcm91",
            "cERhdGESCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCSI1ChhQYWlqaXVDYXJk",
            "R3JvdXBTY29yZURhdGESCgoCaWQYASABKAkSDQoFc2NvcmUYAiABKAUi8QEK",
            "CFJvb21EYXRhEgoKAmlkGAEgASgJEiMKBW1vbmV5GAIgAygLMhQuUm9vbURh",
            "dGEuTW9uZXlFbnRyeRIrCgllYWNoTW9uZXkYAyADKAsyGC5Sb29tRGF0YS5F",
            "YWNoTW9uZXlFbnRyeRIRCglpc0FkZEdvbGQYBCABKAUSFAoMaW5zdGFuY2VO",
            "YW1lGAUgASgJGiwKCk1vbmV5RW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVl",
            "GAIgASgFOgI4ARowCg5FYWNoTW9uZXlFbnRyeRILCgNrZXkYASABKAUSDQoF",
            "dmFsdWUYAiABKAU6AjgBIr0CCghUZXN0RGF0YRIKCgJpZBgBIAEoBRIMCgRu",
            "YW1lGAIgASgJEgsKA2FnZRgDIAEoBRILCgNleHAYBCADKAUSJQoGd2VhcG9u",
            "GAUgAygLMhUuVGVzdERhdGEuV2VhcG9uRW50cnkSEAoIdGVzdExvbmcYBiAB",
            "KAMSEgoKdGVzdERvdWJsZRgHIAEoARIWCg50ZXN0TGlzdERvdWJsZRgIIAMo",
            "ARIzCg10ZXN0TWFwRG91YmxlGAkgAygLMhwuVGVzdERhdGEuVGVzdE1hcERv",
            "dWJsZUVudHJ5Gi0KC1dlYXBvbkVudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1",
            "ZRgCIAEoCToCOAEaNAoSVGVzdE1hcERvdWJsZUVudHJ5EgsKA2tleRgBIAEo",
            "AxINCgV2YWx1ZRgCIAEoAToCOAFCPwodY29tLmNvZGUuc2VydmVyLmNvbnN0",
            "YW50LmRhdGFCD1N0YXRpY0RhdGFQcm90b6oCDGNvbS5ic2wuZGF0YWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::com.bsl.data.DataManager), global::com.bsl.data.DataManager.Parser, new[]{ "PaijiuCardData", "PaijiuCardGroupData", "PaijiuCardGroupScoreData", "RoomData", "TestData" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.bsl.data.PaijiuCardData), global::com.bsl.data.PaijiuCardData.Parser, new[]{ "Id", "Card" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.bsl.data.PaijiuCardGroupData), global::com.bsl.data.PaijiuCardGroupData.Parser, new[]{ "Id", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.bsl.data.PaijiuCardGroupScoreData), global::com.bsl.data.PaijiuCardGroupScoreData.Parser, new[]{ "Id", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.bsl.data.RoomData), global::com.bsl.data.RoomData.Parser, new[]{ "Id", "Money", "EachMoney", "IsAddGold", "InstanceName" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.bsl.data.TestData), global::com.bsl.data.TestData.Parser, new[]{ "Id", "Name", "Age", "Exp", "Weapon", "TestLong", "TestDouble", "TestListDouble", "TestMapDouble" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DataManager : pb::IMessage<DataManager> {
    private static readonly pb::MessageParser<DataManager> _parser = new pb::MessageParser<DataManager>(() => new DataManager());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataManager> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.bsl.data.StaticDataProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataManager() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataManager(DataManager other) : this() {
      paijiuCardData_ = other.paijiuCardData_.Clone();
      paijiuCardGroupData_ = other.paijiuCardGroupData_.Clone();
      paijiuCardGroupScoreData_ = other.paijiuCardGroupScoreData_.Clone();
      roomData_ = other.roomData_.Clone();
      testData_ = other.testData_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataManager Clone() {
      return new DataManager(this);
    }

    /// <summary>Field number for the "paijiuCardData" field.</summary>
    public const int PaijiuCardDataFieldNumber = 1;
    private static readonly pbc::MapField<int, global::com.bsl.data.PaijiuCardData>.Codec _map_paijiuCardData_codec
        = new pbc::MapField<int, global::com.bsl.data.PaijiuCardData>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::com.bsl.data.PaijiuCardData.Parser), 10);
    private readonly pbc::MapField<int, global::com.bsl.data.PaijiuCardData> paijiuCardData_ = new pbc::MapField<int, global::com.bsl.data.PaijiuCardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::com.bsl.data.PaijiuCardData> PaijiuCardData {
      get { return paijiuCardData_; }
    }

    /// <summary>Field number for the "paijiuCardGroupData" field.</summary>
    public const int PaijiuCardGroupDataFieldNumber = 2;
    private static readonly pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupData>.Codec _map_paijiuCardGroupData_codec
        = new pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupData>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::com.bsl.data.PaijiuCardGroupData.Parser), 18);
    private readonly pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupData> paijiuCardGroupData_ = new pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupData> PaijiuCardGroupData {
      get { return paijiuCardGroupData_; }
    }

    /// <summary>Field number for the "paijiuCardGroupScoreData" field.</summary>
    public const int PaijiuCardGroupScoreDataFieldNumber = 3;
    private static readonly pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupScoreData>.Codec _map_paijiuCardGroupScoreData_codec
        = new pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupScoreData>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::com.bsl.data.PaijiuCardGroupScoreData.Parser), 26);
    private readonly pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupScoreData> paijiuCardGroupScoreData_ = new pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupScoreData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::com.bsl.data.PaijiuCardGroupScoreData> PaijiuCardGroupScoreData {
      get { return paijiuCardGroupScoreData_; }
    }

    /// <summary>Field number for the "roomData" field.</summary>
    public const int RoomDataFieldNumber = 4;
    private static readonly pbc::MapField<string, global::com.bsl.data.RoomData>.Codec _map_roomData_codec
        = new pbc::MapField<string, global::com.bsl.data.RoomData>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::com.bsl.data.RoomData.Parser), 34);
    private readonly pbc::MapField<string, global::com.bsl.data.RoomData> roomData_ = new pbc::MapField<string, global::com.bsl.data.RoomData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::com.bsl.data.RoomData> RoomData {
      get { return roomData_; }
    }

    /// <summary>Field number for the "testData" field.</summary>
    public const int TestDataFieldNumber = 5;
    private static readonly pbc::MapField<int, global::com.bsl.data.TestData>.Codec _map_testData_codec
        = new pbc::MapField<int, global::com.bsl.data.TestData>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::com.bsl.data.TestData.Parser), 42);
    private readonly pbc::MapField<int, global::com.bsl.data.TestData> testData_ = new pbc::MapField<int, global::com.bsl.data.TestData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::com.bsl.data.TestData> TestData {
      get { return testData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataManager);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataManager other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!PaijiuCardData.Equals(other.PaijiuCardData)) return false;
      if (!PaijiuCardGroupData.Equals(other.PaijiuCardGroupData)) return false;
      if (!PaijiuCardGroupScoreData.Equals(other.PaijiuCardGroupScoreData)) return false;
      if (!RoomData.Equals(other.RoomData)) return false;
      if (!TestData.Equals(other.TestData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= PaijiuCardData.GetHashCode();
      hash ^= PaijiuCardGroupData.GetHashCode();
      hash ^= PaijiuCardGroupScoreData.GetHashCode();
      hash ^= RoomData.GetHashCode();
      hash ^= TestData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      paijiuCardData_.WriteTo(output, _map_paijiuCardData_codec);
      paijiuCardGroupData_.WriteTo(output, _map_paijiuCardGroupData_codec);
      paijiuCardGroupScoreData_.WriteTo(output, _map_paijiuCardGroupScoreData_codec);
      roomData_.WriteTo(output, _map_roomData_codec);
      testData_.WriteTo(output, _map_testData_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += paijiuCardData_.CalculateSize(_map_paijiuCardData_codec);
      size += paijiuCardGroupData_.CalculateSize(_map_paijiuCardGroupData_codec);
      size += paijiuCardGroupScoreData_.CalculateSize(_map_paijiuCardGroupScoreData_codec);
      size += roomData_.CalculateSize(_map_roomData_codec);
      size += testData_.CalculateSize(_map_testData_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataManager other) {
      if (other == null) {
        return;
      }
      paijiuCardData_.Add(other.paijiuCardData_);
      paijiuCardGroupData_.Add(other.paijiuCardGroupData_);
      paijiuCardGroupScoreData_.Add(other.paijiuCardGroupScoreData_);
      roomData_.Add(other.roomData_);
      testData_.Add(other.testData_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            paijiuCardData_.AddEntriesFrom(input, _map_paijiuCardData_codec);
            break;
          }
          case 18: {
            paijiuCardGroupData_.AddEntriesFrom(input, _map_paijiuCardGroupData_codec);
            break;
          }
          case 26: {
            paijiuCardGroupScoreData_.AddEntriesFrom(input, _map_paijiuCardGroupScoreData_codec);
            break;
          }
          case 34: {
            roomData_.AddEntriesFrom(input, _map_roomData_codec);
            break;
          }
          case 42: {
            testData_.AddEntriesFrom(input, _map_testData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaijiuCardData : pb::IMessage<PaijiuCardData> {
    private static readonly pb::MessageParser<PaijiuCardData> _parser = new pb::MessageParser<PaijiuCardData>(() => new PaijiuCardData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaijiuCardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.bsl.data.StaticDataProtoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaijiuCardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaijiuCardData(PaijiuCardData other) : this() {
      id_ = other.id_;
      card_ = other.card_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaijiuCardData Clone() {
      return new PaijiuCardData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private int card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaijiuCardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaijiuCardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Card != other.Card) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Card != 0) hash ^= Card.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Card != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Card);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Card != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Card);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaijiuCardData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Card != 0) {
        Card = other.Card;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Card = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaijiuCardGroupData : pb::IMessage<PaijiuCardGroupData> {
    private static readonly pb::MessageParser<PaijiuCardGroupData> _parser = new pb::MessageParser<PaijiuCardGroupData>(() => new PaijiuCardGroupData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaijiuCardGroupData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.bsl.data.StaticDataProtoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaijiuCardGroupData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaijiuCardGroupData(PaijiuCardGroupData other) : this() {
      id_ = other.id_;
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaijiuCardGroupData Clone() {
      return new PaijiuCardGroupData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaijiuCardGroupData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaijiuCardGroupData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaijiuCardGroupData other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaijiuCardGroupScoreData : pb::IMessage<PaijiuCardGroupScoreData> {
    private static readonly pb::MessageParser<PaijiuCardGroupScoreData> _parser = new pb::MessageParser<PaijiuCardGroupScoreData>(() => new PaijiuCardGroupScoreData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaijiuCardGroupScoreData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.bsl.data.StaticDataProtoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaijiuCardGroupScoreData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaijiuCardGroupScoreData(PaijiuCardGroupScoreData other) : this() {
      id_ = other.id_;
      score_ = other.score_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaijiuCardGroupScoreData Clone() {
      return new PaijiuCardGroupScoreData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaijiuCardGroupScoreData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaijiuCardGroupScoreData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Score != other.Score) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaijiuCardGroupScoreData other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomData : pb::IMessage<RoomData> {
    private static readonly pb::MessageParser<RoomData> _parser = new pb::MessageParser<RoomData>(() => new RoomData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.bsl.data.StaticDataProtoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomData(RoomData other) : this() {
      id_ = other.id_;
      money_ = other.money_.Clone();
      eachMoney_ = other.eachMoney_.Clone();
      isAddGold_ = other.isAddGold_;
      instanceName_ = other.instanceName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomData Clone() {
      return new RoomData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private static readonly pbc::MapField<int, int>.Codec _map_money_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
    private readonly pbc::MapField<int, int> money_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> Money {
      get { return money_; }
    }

    /// <summary>Field number for the "eachMoney" field.</summary>
    public const int EachMoneyFieldNumber = 3;
    private static readonly pbc::MapField<int, int>.Codec _map_eachMoney_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
    private readonly pbc::MapField<int, int> eachMoney_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> EachMoney {
      get { return eachMoney_; }
    }

    /// <summary>Field number for the "isAddGold" field.</summary>
    public const int IsAddGoldFieldNumber = 4;
    private int isAddGold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsAddGold {
      get { return isAddGold_; }
      set {
        isAddGold_ = value;
      }
    }

    /// <summary>Field number for the "instanceName" field.</summary>
    public const int InstanceNameFieldNumber = 5;
    private string instanceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceName {
      get { return instanceName_; }
      set {
        instanceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!Money.Equals(other.Money)) return false;
      if (!EachMoney.Equals(other.EachMoney)) return false;
      if (IsAddGold != other.IsAddGold) return false;
      if (InstanceName != other.InstanceName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= Money.GetHashCode();
      hash ^= EachMoney.GetHashCode();
      if (IsAddGold != 0) hash ^= IsAddGold.GetHashCode();
      if (InstanceName.Length != 0) hash ^= InstanceName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      money_.WriteTo(output, _map_money_codec);
      eachMoney_.WriteTo(output, _map_eachMoney_codec);
      if (IsAddGold != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IsAddGold);
      }
      if (InstanceName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InstanceName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += money_.CalculateSize(_map_money_codec);
      size += eachMoney_.CalculateSize(_map_eachMoney_codec);
      if (IsAddGold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsAddGold);
      }
      if (InstanceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomData other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      money_.Add(other.money_);
      eachMoney_.Add(other.eachMoney_);
      if (other.IsAddGold != 0) {
        IsAddGold = other.IsAddGold;
      }
      if (other.InstanceName.Length != 0) {
        InstanceName = other.InstanceName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            money_.AddEntriesFrom(input, _map_money_codec);
            break;
          }
          case 26: {
            eachMoney_.AddEntriesFrom(input, _map_eachMoney_codec);
            break;
          }
          case 32: {
            IsAddGold = input.ReadInt32();
            break;
          }
          case 42: {
            InstanceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestData : pb::IMessage<TestData> {
    private static readonly pb::MessageParser<TestData> _parser = new pb::MessageParser<TestData>(() => new TestData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.bsl.data.StaticDataProtoReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestData(TestData other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      age_ = other.age_;
      exp_ = other.exp_.Clone();
      weapon_ = other.weapon_.Clone();
      testLong_ = other.testLong_;
      testDouble_ = other.testDouble_;
      testListDouble_ = other.testListDouble_.Clone();
      testMapDouble_ = other.testMapDouble_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestData Clone() {
      return new TestData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 3;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_exp_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> exp_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Exp {
      get { return exp_; }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 5;
    private static readonly pbc::MapField<int, string>.Codec _map_weapon_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<int, string> weapon_ = new pbc::MapField<int, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> Weapon {
      get { return weapon_; }
    }

    /// <summary>Field number for the "testLong" field.</summary>
    public const int TestLongFieldNumber = 6;
    private long testLong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TestLong {
      get { return testLong_; }
      set {
        testLong_ = value;
      }
    }

    /// <summary>Field number for the "testDouble" field.</summary>
    public const int TestDoubleFieldNumber = 7;
    private double testDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TestDouble {
      get { return testDouble_; }
      set {
        testDouble_ = value;
      }
    }

    /// <summary>Field number for the "testListDouble" field.</summary>
    public const int TestListDoubleFieldNumber = 8;
    private static readonly pb::FieldCodec<double> _repeated_testListDouble_codec
        = pb::FieldCodec.ForDouble(66);
    private readonly pbc::RepeatedField<double> testListDouble_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> TestListDouble {
      get { return testListDouble_; }
    }

    /// <summary>Field number for the "testMapDouble" field.</summary>
    public const int TestMapDoubleFieldNumber = 9;
    private static readonly pbc::MapField<long, double>.Codec _map_testMapDouble_codec
        = new pbc::MapField<long, double>.Codec(pb::FieldCodec.ForInt64(8), pb::FieldCodec.ForDouble(17), 74);
    private readonly pbc::MapField<long, double> testMapDouble_ = new pbc::MapField<long, double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<long, double> TestMapDouble {
      get { return testMapDouble_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Age != other.Age) return false;
      if(!exp_.Equals(other.exp_)) return false;
      if (!Weapon.Equals(other.Weapon)) return false;
      if (TestLong != other.TestLong) return false;
      if (TestDouble != other.TestDouble) return false;
      if(!testListDouble_.Equals(other.testListDouble_)) return false;
      if (!TestMapDouble.Equals(other.TestMapDouble)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      hash ^= exp_.GetHashCode();
      hash ^= Weapon.GetHashCode();
      if (TestLong != 0L) hash ^= TestLong.GetHashCode();
      if (TestDouble != 0D) hash ^= TestDouble.GetHashCode();
      hash ^= testListDouble_.GetHashCode();
      hash ^= TestMapDouble.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Age != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Age);
      }
      exp_.WriteTo(output, _repeated_exp_codec);
      weapon_.WriteTo(output, _map_weapon_codec);
      if (TestLong != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TestLong);
      }
      if (TestDouble != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(TestDouble);
      }
      testListDouble_.WriteTo(output, _repeated_testListDouble_codec);
      testMapDouble_.WriteTo(output, _map_testMapDouble_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      size += exp_.CalculateSize(_repeated_exp_codec);
      size += weapon_.CalculateSize(_map_weapon_codec);
      if (TestLong != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TestLong);
      }
      if (TestDouble != 0D) {
        size += 1 + 8;
      }
      size += testListDouble_.CalculateSize(_repeated_testListDouble_codec);
      size += testMapDouble_.CalculateSize(_map_testMapDouble_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      exp_.Add(other.exp_);
      weapon_.Add(other.weapon_);
      if (other.TestLong != 0L) {
        TestLong = other.TestLong;
      }
      if (other.TestDouble != 0D) {
        TestDouble = other.TestDouble;
      }
      testListDouble_.Add(other.testListDouble_);
      testMapDouble_.Add(other.testMapDouble_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Age = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            exp_.AddEntriesFrom(input, _repeated_exp_codec);
            break;
          }
          case 42: {
            weapon_.AddEntriesFrom(input, _map_weapon_codec);
            break;
          }
          case 48: {
            TestLong = input.ReadInt64();
            break;
          }
          case 57: {
            TestDouble = input.ReadDouble();
            break;
          }
          case 66:
          case 65: {
            testListDouble_.AddEntriesFrom(input, _repeated_testListDouble_codec);
            break;
          }
          case 74: {
            testMapDouble_.AddEntriesFrom(input, _map_testMapDouble_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
